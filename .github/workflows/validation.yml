name: Validation

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  # lint:
  #   name: check service with pylint
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-python@v5.2.0
  #       with:
  #         python-version: '3.12.8'
  #         cache: 'pip'

  #     - name: Install poetry
  #       run: python3.12 -m pip install poetry
      
  #     - name: Install dependencies
  #       run: poetry install

  #     - name: Check pylint
  #       if: ${{ always() }}
  #       run: poetry run pylint movie_library tests

  pytest:
    name: run tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: movie_library
          POSTGRES_USER: user
          POSTGRES_PORT: 5432
          POSTGRES_HOST: postgres
          POSTGRES_PASSWORD: 1234
        ports:
          - 5432:5432
    # env:
    #   POSTGRES_DB: movie_library
    #   POSTGRES_USER: user
    #   POSTGRES_PORT: 5432
    #   POSTGRES_HOST: postgres
    #   POSTGRES_PASSWORD: 1234
    #   DB_PATH: postgres

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5.2.0
        with:
          python-version: '3.12.8'
          cache: 'pip'

      - name: Install poetry
        run: python3.12 -m pip install poetry
      
      - name: Install dependencies
        run: poetry install

      - name: Run tests
        if: ${{ always() }}
        run: poetry run pytest --cov=movie_library --verbosity=2 --showlocals
